// import { useTranslation } from '@/hooks/translation';
import image from '@/assets/stadion.png';
import {
  createContext,
  Dispatch,
  useContext,
  useEffect,
  useState
} from 'react';
// import {Input,Select} from 'antd';
import { useNavigate } from 'react-router-dom';
import { useTranslation } from '@/hooks/translation';
import { useValidify } from '@/hooks/useValidify';
import { Button, Input, Select } from 'antd';
// Define the extended payload type with player-specific fields
export type PlayerPayload = {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  images: any[];
  fieldType: 'gazon' | 'zal';
  name: string;
  size: string;
  priceByHour: string;
};

// Define the validation state type
export interface ValidationState {
  images: boolean | undefined;
  fieldType: boolean | undefined;
  name: boolean | undefined;
  size: boolean | undefined;
  priceByHour: boolean | undefined;
}

const AddStadionContext = createContext<Partial<AddStadionContextType>>({});
export type AddStadionContextType = {
  step: number;
  setStep: Dispatch<React.SetStateAction<number>>;
  payload: PlayerPayload;
  setPayload: Dispatch<React.SetStateAction<PlayerPayload>>;
  handleChange: <F extends keyof PlayerPayload>(
    field: F,
    value: PlayerPayload[F]
  ) => void;
  stateValidation: Partial<ValidationState>;
};

const AddStadionPage = () => {
  const [step, setStep] = useState(0);
  const {
    state: payload,
    setState: setPayload,
    handleChange,
    stateValidation
  } = useValidify<
    PlayerPayload,
    ['name', 'images', 'fieldType', 'size', 'priceByHour']
  >({
    rules: {
      name: (value) => {
        if (value.length < 3) {
          return "Maydon nomi kamida 3 ta belgidan iborat bo'lishi kerak";
        }
        return true;
      },
      images: (value) => {
        if (value.length < 1) {
          return "Maydon rasmlari kamida 1 ta bo'lishi kerak";
        }
        return true;
      },
      fieldType: (value) => {
        if (!value) {
          return 'Maydon turi tanlanishi shart';
        }
        return true;
      },
      size: (value) => {
        if (value.length < 1) {
          return 'Maydon o’lchami tanlanishi shart';
        }
        return true;
      },
      priceByHour: (value) => {
        if (value.length < 1) {
          return 'Narx tanlanishi shart';
        }
        return true;
      }
    },
    requiredFields: ['name', 'images', 'fieldType', 'size', 'priceByHour'],
    autoValidateOnChange: true
  });
  const navigate = useNavigate();
  const t = useTranslation();
  useEffect(() => {
    setPayload((prev) => ({
      ...prev,
      images: [],
      fieldType: 'gazon',
      name: '',
      size: '',
      priceByHour: ''
    }));
  }, [setPayload]);

  // const { id } = useParams();
  return (
    <AddStadionContext.Provider
      value={{
        step,
        setStep,
        payload: payload as PlayerPayload,
        setPayload: setPayload as Dispatch<React.SetStateAction<PlayerPayload>>,
        handleChange,
        stateValidation: stateValidation as ValidationState
      }}
    >
      <div className="max-w-[500px] mx-auto   ">
        <div className="relative mb-4">
          <h1 className="text-center text-xl ">
            {t({
              uz: 'Stadion yaratish',
              ru: 'Создать стадион',
              en: 'Create stadium'
            })}
          </h1>
          <div className="absolute top-0 left-0" onClick={() => navigate(-1)}>
            <svg
              width="8"
              height="24"
              viewBox="0 0 8 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7 18L1 12L7 6"
                stroke="#090A0A"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
          </div>
        </div>
        <div>
          <div className="mt-1">
            <h1 className="text-lg">Maydon rasmlari</h1>
            <div className="w-full grid grid-cols-2 gap-2">
              <div className="w-full   rounded-xl bg-blue-200 justify-center flex items-center">
                <div>
                  <svg
                    width="47"
                    height="44"
                    viewBox="0 0 47 44"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M39.4113 12.117V18.8314C39.4113 18.8314 34.5846 18.8538 34.5604 18.8314V12.117H27.2841C27.2841 12.117 27.3083 7.64821 27.2841 7.62576H34.5604V0.888916H39.4113V7.62576H46.6876V12.117H39.4113ZM32.135 21.0994V14.3626H24.8586V7.62576H5.45513C2.78714 7.62576 0.604248 9.64681 0.604248 12.117V39.0644C0.604248 41.5345 2.78714 43.5556 5.45513 43.5556H34.5604C37.2284 43.5556 39.4113 41.5345 39.4113 39.0644V21.0994H32.135ZM5.45513 39.0644L12.7314 30.0819L17.5823 36.8187L24.8586 27.8363L34.5604 39.0644H5.45513Z"
                      fill="#52A0E8"
                    />
                  </svg>
                </div>
              </div>
              {[1, 2, 3, 4, 5].map(() => (
                <div className="border">
                  <img src={image} alt="" />
                </div>
              ))}
            </div>
          </div>
          <div className="mt-1">
            <h1 className="my-1 text-lg">Maydon Turi</h1>
            <div className="flex justify-center ">
              {' '}
              <div
                onClick={() => handleChange('fieldType', 'gazon')}
                className={`w-1/2  flex items-center justify-start gap-2 cursor-pointer ${
                  payload.fieldType === 'gazon' ? 'text-[#42BA3D]' : ''
                }`}
              >
                <div
                  className={`w-[30px] h-[30px] transition-all duration-300 easy-in-out rounded-full flex items-center justify-center border-2 ${
                    payload.fieldType === 'gazon' ? 'bg-[#42BA3D]' : ''
                  }`}
                >
                  {payload.fieldType === 'gazon' ? (
                    <svg
                      width="18"
                      height="18"
                      viewBox="0 0 14 14"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M11.5718 3.57141L5.2861 9.85713L2.42896 6.99998"
                        stroke="white"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  ) : null}
                </div>
                <svg
                  className="transition-all duration-300 easy-in-out"
                  width="30"
                  height="14"
                  viewBox="0 0 30 14"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0_23_2834)">
                    <path
                      d="M27.6903 5.52477L25.013 5.12181C24.7993 5.08966 24.5602 5.04236 24.2997 4.98194C24.2949 4.98083 24.2903 4.97965 24.2855 4.97867C23.7994 4.8654 23.2391 4.7067 22.6302 4.5155L22.7771 4.04337C22.862 3.77091 22.7277 3.47519 22.4773 3.38296C22.2268 3.29052 21.9551 3.43671 21.8703 3.70924L21.7127 4.21575C21.2928 4.07379 20.8576 3.92079 20.4142 3.76022L20.5668 3.26968C20.6516 2.99723 20.5174 2.7015 20.2669 2.60927C20.0166 2.51669 19.7447 2.66303 19.6599 2.93555L19.5073 3.42602C19.0797 3.26586 18.6488 3.10099 18.2201 2.9343L18.3762 2.43272C18.461 2.16027 18.3268 1.86454 18.0763 1.77231C17.8257 1.67973 17.5541 1.82607 17.4694 2.09859L17.3195 2.58024C16.8838 2.40717 16.4551 2.23444 16.0396 2.06512L16.1981 1.55576C16.2829 1.2833 16.1487 0.98758 15.8982 0.895348C15.6479 0.802769 15.376 0.949104 15.2912 1.22163L15.1433 1.6971C13.0003 0.81034 11.3917 0.0976298 11.3514 0.0797808C11.1208 -0.0227295 10.8565 0.0844338 10.7437 0.326125L10.1559 1.58514C9.83226 2.27826 9.90107 3.16224 10.2832 3.82703C9.91741 3.89509 9.5442 3.92975 9.16614 3.92975C7.09078 3.92975 5.11761 2.84089 3.8878 1.01717C3.79761 0.883403 3.65424 0.804437 3.50182 0.804437H1.58693C1.41969 0.804437 1.26465 0.899377 1.17778 1.05481C1.12965 1.14093 0.000244141 3.19995 0.000244141 6.36055C0.000244141 9.51753 1.09575 11.5744 1.14235 11.6605C1.22846 11.8192 1.38529 11.9167 1.55469 11.9167H3.0291L3.1521 13.5226C3.17278 13.7925 3.38016 14.0002 3.62916 14.0002H5.2249C5.4739 14.0002 5.68129 13.7925 5.70197 13.5226L5.82497 11.9167H6.85888L6.98188 13.5226C7.00256 13.7925 7.20995 14.0002 7.45895 14.0002H9.05469C9.30369 14.0002 9.51107 13.7925 9.53175 13.5226L9.65475 11.9167H17.5917L17.7147 13.5226C17.7353 13.7925 17.9427 14.0002 18.1917 14.0002H19.7875C20.0364 14.0002 20.2439 13.7925 20.2645 13.5226L20.3875 11.9167H21.4215L21.5445 13.5226C21.5651 13.7925 21.7726 14.0002 22.0216 14.0002H23.6173C23.8663 14.0002 24.0737 13.7925 24.0944 13.5226L24.2174 11.9167H25.2514L25.3744 13.5226C25.395 13.7925 25.6024 14.0002 25.8514 14.0002H27.4472C27.6961 14.0002 27.9036 13.7925 27.9242 13.5226L28.0472 11.9167H29.5215C29.786 11.9167 30.0002 11.6835 30.0002 11.3958V8.40971C30.0002 7.01054 28.964 5.71639 27.6903 5.52477ZM14.7901 2.83179L14.7785 2.86916C14.6937 3.14162 14.828 3.43734 15.0784 3.52957C15.1293 3.54839 15.1811 3.55721 15.232 3.55721C15.4316 3.55721 15.6178 3.42032 15.6854 3.20322L15.7291 3.06272C15.8389 3.10314 15.9568 3.14842 16.0848 3.19877C16.3885 3.32163 16.6982 3.44581 17.0115 3.57013L16.9571 3.74501C16.8722 4.01747 17.0065 4.31319 17.2569 4.40542C17.3079 4.42424 17.3596 4.43306 17.4105 4.43306C17.6101 4.43306 17.7964 4.29617 17.8639 4.07907L17.9122 3.92385C18.3405 4.09018 18.7714 4.25464 19.1997 4.4148L19.1483 4.57988C19.0635 4.85234 19.1977 5.14807 19.4482 5.2403C19.499 5.25912 19.5508 5.26794 19.6017 5.26794C19.8013 5.26794 19.9875 5.13105 20.0551 4.91394L20.1066 4.7483C20.5491 4.90818 20.984 5.06069 21.4054 5.203L21.359 5.35239C21.2741 5.62485 21.4084 5.92057 21.6588 6.0128C21.7098 6.03163 21.7615 6.04045 21.8124 6.04045C22.0119 6.04045 22.1982 5.90356 22.2658 5.68645L22.3229 5.50282C22.7519 5.63777 23.1587 5.75736 23.5368 5.85841C23.2731 6.27096 22.8348 6.53418 22.3578 6.53418C22.2219 6.53418 22.0861 6.51285 21.9541 6.47091C19.4119 5.66256 16.1953 4.37556 13.6878 3.32392C14.1315 2.97986 14.4228 2.8254 14.7901 2.83179ZM11.0095 2.05692L11.3982 1.22434C11.8443 1.41985 12.6161 1.75523 13.5807 2.1627C13.4076 2.26958 13.2243 2.40119 13.0249 2.55996C12.8314 2.71407 12.6315 2.85541 12.4263 2.98424C12.4162 2.99 12.4065 2.99625 12.3968 3.00285C12.0479 3.21933 11.6835 3.39942 11.307 3.54117C11.3051 3.5395 11.3034 3.53783 11.3018 3.53638C10.9278 3.19613 10.7939 2.51864 11.0095 2.05692ZM0.957691 6.36055C0.957691 5.81021 0.996116 5.29593 1.05797 4.82366C2.84214 4.9552 4.50363 5.94724 5.56263 7.53469C5.65269 7.66964 5.79669 7.74958 5.95001 7.74958L13.4549 7.74964C14.0789 7.74964 14.6111 8.18518 14.8087 8.79142H1.20063C1.06058 8.10281 0.957691 7.28314 0.957691 6.36055ZM4.78441 12.9584H4.06965L3.98986 11.9167H4.8642L4.78441 12.9584ZM8.6142 12.9584H7.89944L7.81965 11.9167H8.69399L8.6142 12.9584ZM19.347 12.9584H18.6323L18.5524 11.9167H19.4268L19.347 12.9584ZM23.1768 12.9584H22.4621L22.3823 11.9167H23.2566L23.1768 12.9584ZM27.0066 12.9584H26.2919L26.2121 11.9167H27.0864L27.0066 12.9584ZM27.6002 10.8749H27.5958H25.7031C25.7031 10.8749 25.6991 10.8749 25.697 10.8749H23.7704H23.7661H21.8734C21.8713 10.8748 21.8673 10.8749 21.8673 10.8749H19.9407H19.9363H18.0436C18.0415 10.8748 18.0396 10.8749 18.0375 10.8749H9.20961C9.20718 10.8749 9.20469 10.8748 9.20226 10.8749H7.30978C7.30678 10.8749 5.37988 10.8749 5.37988 10.8749C5.37746 10.8749 5.37497 10.8748 5.37254 10.8749H3.47999C3.47699 10.8749 1.84531 10.8749 1.84531 10.8749C1.74848 10.6562 1.60614 10.302 1.46361 9.83312L27.6066 9.83319L27.1278 9.3123L27.6066 8.79142L15.8004 8.79135C15.578 7.604 14.6108 6.7078 13.4549 6.7078L6.18867 6.70773C4.98331 5.02951 3.17916 3.97253 1.23956 3.79362C1.4472 2.8636 1.71931 2.18728 1.87416 1.84621H3.26424C4.68101 3.808 6.8689 4.97152 9.16607 4.97152C10.4092 4.97152 11.6073 4.64378 12.6846 4.01844C15.284 5.11966 18.8828 6.57981 21.6855 7.47101C21.9047 7.54073 22.1309 7.57609 22.3578 7.57609C23.2846 7.57609 24.1256 6.98193 24.5178 6.0901C24.6452 6.11504 24.7669 6.13657 24.8817 6.15386L27.5591 6.55682C28.3633 6.67773 29.0427 7.52636 29.0427 8.40978V8.79142L27.6066 8.79142L27.1278 9.3123L27.6066 9.83319L29.0428 9.83319V10.875L27.6002 10.8749Z"
                      fill={
                        payload.fieldType === 'gazon' ? '#42BA3D' : '#72777A'
                      }
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_23_2834">
                      <rect
                        width="30"
                        height="14"
                        fill="white"
                        transform="translate(0.000244141 0.000244141)"
                      />
                    </clipPath>
                  </defs>
                </svg>
                <h1 className="transition-all duration-300 easy-in-out">
                  Gazon
                </h1>
              </div>
              <div
                onClick={() => handleChange('fieldType', 'zal')}
                className={`w-1/2  flex items-center justify-start gap-2 cursor-pointer ${
                  payload.fieldType === 'zal' ? 'text-[#42BA3D]' : ''
                }`}
              >
                <div
                  className={`w-[30px] h-[30px] transition-all duration-300 easy-in-out rounded-full flex items-center justify-center border-2 ${
                    payload.fieldType === 'zal' ? 'bg-[#42BA3D]' : ''
                  }`}
                >
                  {payload.fieldType === 'zal' ? (
                    <svg
                      className="transition-all duration-300 easy-in-out"
                      width="18"
                      height="18"
                      viewBox="0 0 14 14"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M11.5718 3.57141L5.2861 9.85713L2.42896 6.99998"
                        stroke="white"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  ) : null}
                </div>
                <svg
                  width="30"
                  height="14"
                  viewBox="0 0 30 14"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0_23_2834)">
                    <path
                      d="M27.6903 5.52477L25.013 5.12181C24.7993 5.08966 24.5602 5.04236 24.2997 4.98194C24.2949 4.98083 24.2903 4.97965 24.2855 4.97867C23.7994 4.8654 23.2391 4.7067 22.6302 4.5155L22.7771 4.04337C22.862 3.77091 22.7277 3.47519 22.4773 3.38296C22.2268 3.29052 21.9551 3.43671 21.8703 3.70924L21.7127 4.21575C21.2928 4.07379 20.8576 3.92079 20.4142 3.76022L20.5668 3.26968C20.6516 2.99723 20.5174 2.7015 20.2669 2.60927C20.0166 2.51669 19.7447 2.66303 19.6599 2.93555L19.5073 3.42602C19.0797 3.26586 18.6488 3.10099 18.2201 2.9343L18.3762 2.43272C18.461 2.16027 18.3268 1.86454 18.0763 1.77231C17.8257 1.67973 17.5541 1.82607 17.4694 2.09859L17.3195 2.58024C16.8838 2.40717 16.4551 2.23444 16.0396 2.06512L16.1981 1.55576C16.2829 1.2833 16.1487 0.98758 15.8982 0.895348C15.6479 0.802769 15.376 0.949104 15.2912 1.22163L15.1433 1.6971C13.0003 0.81034 11.3917 0.0976298 11.3514 0.0797808C11.1208 -0.0227295 10.8565 0.0844338 10.7437 0.326125L10.1559 1.58514C9.83226 2.27826 9.90107 3.16224 10.2832 3.82703C9.91741 3.89509 9.5442 3.92975 9.16614 3.92975C7.09078 3.92975 5.11761 2.84089 3.8878 1.01717C3.79761 0.883403 3.65424 0.804437 3.50182 0.804437H1.58693C1.41969 0.804437 1.26465 0.899377 1.17778 1.05481C1.12965 1.14093 0.000244141 3.19995 0.000244141 6.36055C0.000244141 9.51753 1.09575 11.5744 1.14235 11.6605C1.22846 11.8192 1.38529 11.9167 1.55469 11.9167H3.0291L3.1521 13.5226C3.17278 13.7925 3.38016 14.0002 3.62916 14.0002H5.2249C5.4739 14.0002 5.68129 13.7925 5.70197 13.5226L5.82497 11.9167H6.85888L6.98188 13.5226C7.00256 13.7925 7.20995 14.0002 7.45895 14.0002H9.05469C9.30369 14.0002 9.51107 13.7925 9.53175 13.5226L9.65475 11.9167H17.5917L17.7147 13.5226C17.7353 13.7925 17.9427 14.0002 18.1917 14.0002H19.7875C20.0364 14.0002 20.2439 13.7925 20.2645 13.5226L20.3875 11.9167H21.4215L21.5445 13.5226C21.5651 13.7925 21.7726 14.0002 22.0216 14.0002H23.6173C23.8663 14.0002 24.0737 13.7925 24.0944 13.5226L24.2174 11.9167H25.2514L25.3744 13.5226C25.395 13.7925 25.6024 14.0002 25.8514 14.0002H27.4472C27.6961 14.0002 27.9036 13.7925 27.9242 13.5226L28.0472 11.9167H29.5215C29.786 11.9167 30.0002 11.6835 30.0002 11.3958V8.40971C30.0002 7.01054 28.964 5.71639 27.6903 5.52477ZM14.7901 2.83179L14.7785 2.86916C14.6937 3.14162 14.828 3.43734 15.0784 3.52957C15.1293 3.54839 15.1811 3.55721 15.232 3.55721C15.4316 3.55721 15.6178 3.42032 15.6854 3.20322L15.7291 3.06272C15.8389 3.10314 15.9568 3.14842 16.0848 3.19877C16.3885 3.32163 16.6982 3.44581 17.0115 3.57013L16.9571 3.74501C16.8722 4.01747 17.0065 4.31319 17.2569 4.40542C17.3079 4.42424 17.3596 4.43306 17.4105 4.43306C17.6101 4.43306 17.7964 4.29617 17.8639 4.07907L17.9122 3.92385C18.3405 4.09018 18.7714 4.25464 19.1997 4.4148L19.1483 4.57988C19.0635 4.85234 19.1977 5.14807 19.4482 5.2403C19.499 5.25912 19.5508 5.26794 19.6017 5.26794C19.8013 5.26794 19.9875 5.13105 20.0551 4.91394L20.1066 4.7483C20.5491 4.90818 20.984 5.06069 21.4054 5.203L21.359 5.35239C21.2741 5.62485 21.4084 5.92057 21.6588 6.0128C21.7098 6.03163 21.7615 6.04045 21.8124 6.04045C22.0119 6.04045 22.1982 5.90356 22.2658 5.68645L22.3229 5.50282C22.7519 5.63777 23.1587 5.75736 23.5368 5.85841C23.2731 6.27096 22.8348 6.53418 22.3578 6.53418C22.2219 6.53418 22.0861 6.51285 21.9541 6.47091C19.4119 5.66256 16.1953 4.37556 13.6878 3.32392C14.1315 2.97986 14.4228 2.8254 14.7901 2.83179ZM11.0095 2.05692L11.3982 1.22434C11.8443 1.41985 12.6161 1.75523 13.5807 2.1627C13.4076 2.26958 13.2243 2.40119 13.0249 2.55996C12.8314 2.71407 12.6315 2.85541 12.4263 2.98424C12.4162 2.99 12.4065 2.99625 12.3968 3.00285C12.0479 3.21933 11.6835 3.39942 11.307 3.54117C11.3051 3.5395 11.3034 3.53783 11.3018 3.53638C10.9278 3.19613 10.7939 2.51864 11.0095 2.05692ZM0.957691 6.36055C0.957691 5.81021 0.996116 5.29593 1.05797 4.82366C2.84214 4.9552 4.50363 5.94724 5.56263 7.53469C5.65269 7.66964 5.79669 7.74958 5.95001 7.74958L13.4549 7.74964C14.0789 7.74964 14.6111 8.18518 14.8087 8.79142H1.20063C1.06058 8.10281 0.957691 7.28314 0.957691 6.36055ZM4.78441 12.9584H4.06965L3.98986 11.9167H4.8642L4.78441 12.9584ZM8.6142 12.9584H7.89944L7.81965 11.9167H8.69399L8.6142 12.9584ZM19.347 12.9584H18.6323L18.5524 11.9167H19.4268L19.347 12.9584ZM23.1768 12.9584H22.4621L22.3823 11.9167H23.2566L23.1768 12.9584ZM27.0066 12.9584H26.2919L26.2121 11.9167H27.0864L27.0066 12.9584ZM27.6002 10.8749H27.5958H25.7031C25.7031 10.8749 25.6991 10.8749 25.697 10.8749H23.7704H23.7661H21.8734C21.8713 10.8748 21.8673 10.8749 21.8673 10.8749H19.9407H19.9363H18.0436C18.0415 10.8748 18.0396 10.8749 18.0375 10.8749H9.20961C9.20718 10.8749 9.20469 10.8748 9.20226 10.8749H7.30978C7.30678 10.8749 5.37988 10.8749 5.37988 10.8749C5.37746 10.8749 5.37497 10.8748 5.37254 10.8749H3.47999C3.47699 10.8749 1.84531 10.8749 1.84531 10.8749C1.74848 10.6562 1.60614 10.302 1.46361 9.83312L27.6066 9.83319L27.1278 9.3123L27.6066 8.79142L15.8004 8.79135C15.578 7.604 14.6108 6.7078 13.4549 6.7078L6.18867 6.70773C4.98331 5.02951 3.17916 3.97253 1.23956 3.79362C1.4472 2.8636 1.71931 2.18728 1.87416 1.84621H3.26424C4.68101 3.808 6.8689 4.97152 9.16607 4.97152C10.4092 4.97152 11.6073 4.64378 12.6846 4.01844C15.284 5.11966 18.8828 6.57981 21.6855 7.47101C21.9047 7.54073 22.1309 7.57609 22.3578 7.57609C23.2846 7.57609 24.1256 6.98193 24.5178 6.0901C24.6452 6.11504 24.7669 6.13657 24.8817 6.15386L27.5591 6.55682C28.3633 6.67773 29.0427 7.52636 29.0427 8.40978V8.79142L27.6066 8.79142L27.1278 9.3123L27.6066 9.83319L29.0428 9.83319V10.875L27.6002 10.8749Z"
                      fill={payload.fieldType === 'zal' ? '#42BA3D' : '#72777A'}
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_23_2834">
                      <rect
                        width="30"
                        height="14"
                        fill="white"
                        transform="translate(0.000244141 0.000244141)"
                      />
                    </clipPath>
                  </defs>
                </svg>
                <h1 className="transition-all duration-300 easy-in-out">
                  Futzal
                </h1>
              </div>
            </div>
            <div className="grid grid-cols-1 gap-2 mt-1 ">
              <div className="col-span-1">
                <h1>Maydon №</h1>
                <Input placeholder=" raqami" size="large" />
              </div>
              <div className="col-span-1">
                <h1>O'lchami</h1>
                <Select
                  size="large"
                  placeholder={" o'lchami"}
                  className="w-full"
                />
              </div>
              <div className="col-span-1">
                <h1>Narxi (soatiga)</h1>
                <Input
                  placeholder="narxi"
                  size="large"
                  suffix={
                    <svg
                      width="30"
                      height="24"
                      viewBox="0 0 44 40"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <rect
                        y="-0.00012207"
                        width="44"
                        height="40"
                        rx="6"
                        fill="#ECFCE5"
                      />
                      <path
                        d="M15.5295 14.8181H17.0707V21.5148C17.0707 22.2274 16.9033 22.8588 16.5685 23.409C16.2338 23.9558 15.7631 24.3867 15.1566 24.7016C14.5501 25.0131 13.8391 25.1689 13.0238 25.1689C12.2118 25.1689 11.5025 25.0131 10.896 24.7016C10.2894 24.3867 9.81877 23.9558 9.48402 23.409C9.14927 22.8588 8.98189 22.2274 8.98189 21.5148V14.8181H10.5181V21.3905C10.5181 21.8512 10.6192 22.2605 10.8214 22.6185C11.0269 22.9764 11.3169 23.2582 11.6914 23.4637C12.0659 23.6658 12.5101 23.7669 13.0238 23.7669C13.5408 23.7669 13.9866 23.6658 14.3612 23.4637C14.739 23.2582 15.0273 22.9764 15.2262 22.6185C15.4284 22.2605 15.5295 21.8512 15.5295 21.3905V14.8181ZM19.0407 24.9999V23.9757L24.3951 16.1405H18.9959V14.8181H26.2743V15.8422L20.9199 23.6774H26.3191V24.9999H19.0407ZM33.7988 17.4928C33.7458 17.0221 33.527 16.6575 33.1426 16.399C32.7581 16.1372 32.2742 16.0063 31.6909 16.0063C31.2733 16.0063 30.912 16.0726 30.6071 16.2051C30.3021 16.3344 30.0652 16.5134 29.8961 16.7421C29.7304 16.9674 29.6475 17.2243 29.6475 17.5127C29.6475 17.7546 29.7039 17.9634 29.8166 18.1391C29.9326 18.3147 30.0834 18.4622 30.269 18.5816C30.4579 18.6976 30.6601 18.7953 30.8755 18.8749C31.091 18.9511 31.2981 19.0141 31.497 19.0638L32.4913 19.3223C32.8161 19.4019 33.1492 19.5096 33.4906 19.6455C33.832 19.7814 34.1485 19.9603 34.4402 20.1824C34.7318 20.4045 34.9672 20.6796 35.1461 21.0077C35.3284 21.3358 35.4196 21.7286 35.4196 22.186C35.4196 22.7627 35.2704 23.2747 34.9721 23.7222C34.6771 24.1696 34.2479 24.5226 33.6845 24.7811C33.1243 25.0397 32.4466 25.1689 31.6511 25.1689C30.8888 25.1689 30.2292 25.0479 29.6724 24.806C29.1156 24.564 28.6797 24.221 28.3649 23.7769C28.05 23.3294 27.876 22.7991 27.8429 22.186H29.3841C29.4139 22.5539 29.5332 22.8604 29.742 23.1057C29.9541 23.3477 30.2243 23.5283 30.5524 23.6476C30.8838 23.7636 31.2467 23.8216 31.6412 23.8216C32.0753 23.8216 32.4615 23.7537 32.7995 23.6178C33.1409 23.4786 33.4094 23.2863 33.6049 23.0411C33.8005 22.7925 33.8983 22.5025 33.8983 22.171C33.8983 21.8694 33.8121 21.6225 33.6397 21.4303C33.4707 21.238 33.2404 21.0789 32.9487 20.953C32.6603 20.8271 32.3339 20.716 31.9693 20.6199L30.7662 20.2918C29.9508 20.0697 29.3045 19.7432 28.8272 19.3124C28.3533 18.8815 28.1163 18.3114 28.1163 17.6022C28.1163 17.0155 28.2754 16.5034 28.5936 16.0659C28.9118 15.6284 29.3426 15.2887 29.8862 15.0468C30.4297 14.8015 31.0429 14.6789 31.7257 14.6789C32.4151 14.6789 33.0233 14.7998 33.5502 15.0418C34.0806 15.2837 34.4982 15.6168 34.8031 16.0411C35.108 16.462 35.2671 16.9459 35.2804 17.4928H33.7988Z"
                        fill="#42BA3D"
                      />
                    </svg>
                  }
                />
              </div>
            </div>
          </div>
          <div className="mt-10 flex items-center justify-center h-full">
            <Button
              className="w-full"
              icon={
                <svg
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0_23_2843)">
                    <path
                      d="M15 16H16V3.82843L14.1716 2H13V6H4V2H2V16H3V9H15V16ZM1 0H15L17.7071 2.70711C17.8946 2.89464 18 3.149 18 3.41421V17C18 17.5523 17.5523 18 17 18H1C0.44772 18 0 17.5523 0 17V1C0 0.44772 0.44772 0 1 0ZM5 11V16H13V11H5Z"
                      fill="white"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_23_2843">
                      <rect width="18" height="18" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
              }
              type="primary"
            >
              Saqlash
            </Button>
          </div>
        </div>
      </div>
    </AddStadionContext.Provider>
  );
};

export default AddStadionPage;

// eslint-disable-next-line react-refresh/only-export-components
export const useAddStadion = () => useContext(AddStadionContext);

// eslint-disable-next-line react-refresh/only-export-components
export const itemVariants = {
  hidden: { y: 20, opacity: 0 },
  visible: {
    y: 0,
    opacity: 1,
    transition: {
      type: 'spring',
      stiffness: 300,
      damping: 24
    }
  }
};
